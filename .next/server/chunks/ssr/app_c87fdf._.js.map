{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/aybb/Desktop/pfe/pfe_final/smart_pfe/app/components/PlanifierSoutenance/JurySelector.tsx"],"sourcesContent":["                    \r\n\"use client\"\r\nimport React, { useEffect, useState } from 'react';\r\nimport { FaUser } from 'react-icons/fa';\r\n\r\ninterface Jury {\r\n  idJury: number;\r\n  nom: string;\r\n}\r\n\r\ninterface JurySelectorProps {\r\n  selectedJury: string;\r\n  onSelectJury: (jury: string) => void;\r\n}\r\n\r\nconst JurySelector = ({ selectedJury, onSelectJury }: JurySelectorProps) => {\r\n  const [jurys, setJurys] = useState<Jury[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Fetch jury data from the API\r\n  useEffect(() => {\r\n    const fetchJurys = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/jurys'); // Replace with your backend URL\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch jury data');\r\n        }\r\n        const data = await response.json();\r\n        setJurys(data); // Set the fetched jury data\r\n      } catch (err) {\r\n        console.error('Error fetching jury data:', err);\r\n        setError('Failed to fetch jury data');\r\n      } finally {\r\n        setLoading(false); // Set loading to false after fetching\r\n      }\r\n    };\r\n\r\n    fetchJurys();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>; // Show loading state\r\n  }\r\n\r\n  if (error) {\r\n    return <div>{error}</div>; // Show error message\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex items-center gap-3 bg-gray-50 p-4 rounded-lg shadow-sm\">\r\n      <FaUser className=\"text-gray-600\" />\r\n      <select\r\n        value={selectedJury}\r\n        onChange={(e) => onSelectJury(e.target.value)}\r\n        className=\"p-2 border rounded w-full focus:ring-2 focus:ring-blue-500\"\r\n      >\r\n        <option value=\"\">SÃ©lectionner un jury</option>\r\n        {jurys.map((jury) => (\r\n          <option key={jury.idJury} value={jury.nom}>\r\n            {jury.nom}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JurySelector;"],"names":[],"mappings":";;;;AAEA;AACA;AAFA;;;;AAcA,MAAM,eAAe,CAAC,EAAE,YAAY,EAAE,YAAY,EAAqB;IACrE,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU,EAAE;IAC7C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;IAChD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,+BAA+B;IAC/B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,aAAa;YACjB,IAAI;gBACF,MAAM,WAAW,MAAM,MAAM,oCAAoC,gCAAgC;gBACjG,IAAI,CAAC,SAAS,EAAE,EAAE;oBAChB,MAAM,IAAI,MAAM;gBAClB;gBACA,MAAM,OAAO,MAAM,SAAS,IAAI;gBAChC,SAAS,OAAO,4BAA4B;YAC9C,EAAE,OAAO,KAAK;gBACZ,QAAQ,KAAK,CAAC,6BAA6B;gBAC3C,SAAS;YACX,SAAU;gBACR,WAAW,QAAQ,sCAAsC;YAC3D;QACF;QAEA;IACF,GAAG,EAAE;IAEL,IAAI,SAAS;QACX,qBAAO,8OAAC;sBAAI;;;;;kBAAkB,qBAAqB;IACrD;IAEA,IAAI,OAAO;QACT,qBAAO,8OAAC;sBAAK;;;;;kBAAc,qBAAqB;IAClD;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,8IAAA,CAAA,SAAM;gBAAC,WAAU;;;;;;0BAClB,8OAAC;gBACC,OAAO;gBACP,UAAU,CAAC,IAAM,aAAa,EAAE,MAAM,CAAC,KAAK;gBAC5C,WAAU;;kCAEV,8OAAC;wBAAO,OAAM;kCAAG;;;;;;oBAChB,MAAM,GAAG,CAAC,CAAC,qBACV,8OAAC;4BAAyB,OAAO,KAAK,GAAG;sCACtC,KAAK,GAAG;2BADE,KAAK,MAAM;;;;;;;;;;;;;;;;;AAOlC;uCAEe"}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/aybb/Desktop/pfe/pfe_final/smart_pfe/app/pages/PlanifierSoutenance.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport JurySelector from \"../components/PlanifierSoutenance/JurySelector\";\r\n\r\ninterface Jury {\r\n  idJury: number;\r\n  nom: string;\r\n}\r\n\r\nconst PlanifierSoutenance = () => {\r\n  const [jurys, setJurys] = useState<Jury[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchJurys = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/api/jurys\"); // Fetch from Express backend\r\n  \r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch jury list\");\r\n        }\r\n  \r\n        const jurysData = await response.json();\r\n        setJurys(jurysData);\r\n      } catch (error) {\r\n        console.error(\"Error fetching jurys:\", error);\r\n        setError(\"Failed to fetch jury list. Please try again.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n  \r\n    fetchJurys();\r\n  }, []);\r\n  \r\n\r\n  if (loading) {\r\n    return <div className=\"p-8 text-center\">Loading jurys...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"p-8 text-center text-red-500\">{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-8 bg-gray-50 min-h-screen\">\r\n      <h1 className=\"text-4xl font-bold text-gray-800 mb-8 text-center\">ðŸ“… Jury Selection</h1>\r\n      <div className=\"max-w-4xl mx-auto bg-white p-6 rounded-lg shadow-xl mb-8\">\r\n        <h2 className=\"text-2xl font-semibold text-gray-700 mb-6\">Select a Jury</h2>\r\n        <JurySelector jurys={jurys} selectedJury=\"\" onSelectJury={() => {}} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlanifierSoutenance;\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAUA,MAAM,sBAAsB;IAC1B,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU,EAAE;IAC7C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;IAChD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,aAAa;YACjB,IAAI;gBACF,MAAM,WAAW,MAAM,MAAM,oCAAoC,6BAA6B;gBAE9F,IAAI,CAAC,SAAS,EAAE,EAAE;oBAChB,MAAM,IAAI,MAAM;gBAClB;gBAEA,MAAM,YAAY,MAAM,SAAS,IAAI;gBACrC,SAAS;YACX,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,yBAAyB;gBACvC,SAAS;YACX,SAAU;gBACR,WAAW;YACb;QACF;QAEA;IACF,GAAG,EAAE;IAGL,IAAI,SAAS;QACX,qBAAO,8OAAC;YAAI,WAAU;sBAAkB;;;;;;IAC1C;IAEA,IAAI,OAAO;QACT,qBAAO,8OAAC;YAAI,WAAU;sBAAgC;;;;;;IACxD;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAoD;;;;;;0BAClE,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAA4C;;;;;;kCAC1D,8OAAC,yJAAA,CAAA,UAAY;wBAAC,OAAO;wBAAO,cAAa;wBAAG,cAAc,KAAO;;;;;;;;;;;;;;;;;;AAIzE;uCAEe"}},
    {"offset": {"line": 206, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}